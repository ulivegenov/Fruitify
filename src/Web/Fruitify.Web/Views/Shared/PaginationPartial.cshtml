@using Fruitify.Common

@{
    ViewData["Title"] = "Pagination view";
}

<div class="row">
    <hr />
</div>
<div class="block-27">
    <div class="col text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (this.Model.CurrentPage == 1)
                {
                    <li>
                        <a aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <a aria-label="Previous" asp-route="default" asp-route-id="@(this.Model.CurrentPage - 1)">
                            <span aria-hidden="true">&laquo;</span>
                            <span class="sr-only">Previous</span>
                        </a>
                    </li>
                }

                @{
                    var pagesToShow = new List<int>();
                    for (var i = 1; i <= GlobalConstants.MorePagesToShow; i++)
                    {
                        pagesToShow.Add(i);
                    }
                    for (var i = this.Model.CurrentPage - GlobalConstants.MorePagesToShow; i <= this.Model.CurrentPage + GlobalConstants.MorePagesToShow; i++)
                    {
                        if (i > 0)
                        {
                            pagesToShow.Add(i);
                        }
                    }
                    for (var i = this.Model.PagesCount - GlobalConstants.MorePagesToShow + 1; i <= this.Model.PagesCount; i++)
                    {
                        if (i > 0)
                        {
                            pagesToShow.Add(i);
                        }
                    }
                    pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
                }

                @for (var i = 0; i < pagesToShow.Count; i++)
                {
                    var pageNumber = pagesToShow[i];
                    var active = pagesToShow[i] == this.Model.CurrentPage ? "active" : string.Empty;
                    if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
                    {
                        <li>
                            <a asp-route="default" asp-route-id="@(pagesToShow[i - 1] + 1)">...</a>
                        </li>

                    }
                    <li class="@active">
                        <a asp-route="default" asp-route-id="@pagesToShow[i]">@pagesToShow[i]</a>
                    </li>

                }

                @if (this.Model.CurrentPage == this.Model.PagesCount)
                {
                    <li class="disabled">
                        <a aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                }
                else
                {
                    <li>
                        <a aria-label="Next" asp-route="default" asp-route-id="@(this.Model.CurrentPage + 1)">
                            <span aria-hidden="true">&raquo;</span>
                            <span class="sr-only">Next</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
